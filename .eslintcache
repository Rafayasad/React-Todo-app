[{"F:\\Javascript\\Open Source\\React-Todo-app\\src\\index.js":"1","F:\\Javascript\\Open Source\\React-Todo-app\\src\\reportWebVitals.js":"2","F:\\Javascript\\Open Source\\React-Todo-app\\src\\App.js":"3","F:\\Javascript\\Open Source\\React-Todo-app\\src\\components\\logo.js":"4","F:\\Javascript\\Open Source\\React-Todo-app\\src\\config\\firebase.js":"5"},{"size":529,"mtime":1611690492204,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1611689937227,"results":"8","hashOfConfig":"7"},{"size":5367,"mtime":1611690400496,"results":"9","hashOfConfig":"7"},{"size":326,"mtime":1611689937167,"results":"10","hashOfConfig":"7"},{"size":591,"mtime":1611689937171,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1jg2p30",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Javascript\\Open Source\\React-Todo-app\\src\\index.js",[],["24","25"],"F:\\Javascript\\Open Source\\React-Todo-app\\src\\reportWebVitals.js",[],"F:\\Javascript\\Open Source\\React-Todo-app\\src\\App.js",["26","27","28"],"import React from 'react';\r\nimport firebase from './config/firebase';\r\nimport './App.css';\r\nimport Logo from './components/logo'\r\n\r\nclass App extends React.Component{\r\n    // state of this class //\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            todos:[{text:\"rafay\" , edit: false }],\r\n            // todos:[],\r\n            value:'',\r\n            key : firebase.database().ref(\"todos\").push().key\r\n        }\r\n    }\r\n    // Add items in todo list //\r\n    set_item =()=>{\r\n        // let key = firebase.database().ref(\"todos\").push().key;\r\n        let obj = {text : this.state.value};\r\n        this.setState({\r\n            todos:[...this.state.todos,obj],\r\n            value:''\r\n        })\r\n        firebase.database().ref('/').child('todos')\r\n        .push(obj);\r\n    }\r\n    ///////////// this liftcycle method getting data from database //////////////////////\r\n    componentDidMount(){\r\n        // const previousTodos = this.state.todos;\r\n        firebase.database().ref('todos').on(\"child_added\",data =>{\r\n            this.state.todos.push({\r\n                // id : data.key,\r\n                text:data.val().text,\r\n                // completed : false\r\n            })\r\n            this.setState({\r\n                todos:this.state.todos\r\n            })\r\n            // console.log(data.val());\r\n            // firebase.database().ref('todos').on('child_removed',data=>{\r\n            //     for(var i=0 ; i<this.state.todos.length ; i++){\r\n            //         if(this.state.todos[i].id === data.key){\r\n            //             this.state.todos.splice(i,1);\r\n            //         }\r\n            //     }\r\n            // })\r\n            // this.setState({\r\n            //     todos:this.state.todos\r\n            // })\r\n        })\r\n    }\r\n    // delete items from todo list //\r\n    delete_item =(index)=>{\r\n        // let key = firebase.database().ref('todos').push().key;\r\n        this.state.todos.splice(index,1);\r\n        this.setState({\r\n            todos:this.state.todos\r\n        })\r\n        // firebase.database().ref(\"todos\").child(this.state.todos[]).remove();\r\n    }\r\n    // edit items from todo list //\r\n\r\n    ////////////// simple way to make edit ////////////////////\r\n    \r\n    // edit_item =(index)=>{\r\n    //     let afterEdit = prompt(\"Enter item\");\r\n    //     this.state.todos[index] = afterEdit;\r\n    //     this.setState({\r\n    //         todos:this.state.todos\r\n    //     })\r\n    // }\r\n    \r\n    ///////////// input field when you click on edit button ////////////////\r\n    \r\n    edit_item =(index,value)=>{\r\n        this.state.todos[index].edit = true;\r\n        this.setState({\r\n            todos:this.state.todos,\r\n            value:''\r\n        })\r\n        // firebase.database().ref(\"todos\").child(this.state.key).set(this.state.todos[index].text);\r\n    }\r\n    \r\n    //////////// this function is running for change the text of the field ///////////\r\n    \r\n    afterEdit =(e,index)=>{\r\n        this.state.todos[index].text=e.target.value;\r\n        this.setState({\r\n            todos:this.state.todos\r\n        })\r\n        \r\n    }\r\n    \r\n    ///////////////// when you click on update button this function will run ////////////////////\r\n    update =(e,index)=>{\r\n        this.state.todos[index].edit = false;\r\n        this.setState({\r\n            todos:this.state.todos\r\n        })\r\n        // console.log(this.state.todos[index].text);\r\n    }\r\n\r\n    // deleteAll_item=()=>{\r\n    //     <li>{this.props.emp}</li>\r\n    //     this.setState({\r\n    //         todos:this.state.todos\r\n    //     })\r\n    //     firebase.database().ref(\"todos\").remove();\r\n        \r\n    // }\r\n\r\n\r\n\r\n    \r\n    render(){\r\n        // var key = firebase.database().ref('todos').push().key;\r\n        // firebase.database().ref('todos/').on(\"child_added\",data=>{\r\n            //     console.log(data.val());\r\n        // })\r\n        let {todos , value} = this.state;\r\n        return(\r\n            <div className=\"todo\">\r\n                <h1 className=\"header\">TODO APP<Logo />\r\n                    </h1><br />\r\n                <input className=\"textfield\" value={value} onChange={(e)=>this.setState({value:e.target.value})} type=\"text\" placeholder=\"Enter your item\"/>\r\n                <button className=\"add btn btn-dark\" onClick={()=>this.set_item()}>Add item</button>\r\n                {/* <button onClick={()=>this.deleteAll_item()}>Delete All</button> */}\r\n                <ul className=\"list-group list-group-flush\"><br />\r\n                    {todos.map((v,i)=>{\r\n                    // firebase.database().ref('todos').on(\"child_added\",data=>{\r\n                            return <li className=\"list-group-item\" key={i}>\r\n                           {v.edit ? <input className=\"up-inp\" onChange={(e)=>this.afterEdit(e,i)} type=\"text\" /> : v.text}\r\n                           {v.edit ?\r\n                           <button className=\"up-btn btn btn-outline-dark\" onClick={(e)=>this.update(e,i)}>update</button>\r\n                           :<button className=\"ed-btn btn btn-outline-dark\" onClick={()=>this.edit_item(i,v.text)}>edit</button>}\r\n                           <button className=\"del-btn btn btn-outline-dark\" onClick={()=>this.delete_item(i)}>delete</button>\r\n                           </li>\r\n\r\n                // })\r\n                    })}\r\n                </ul>\r\n            </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","F:\\Javascript\\Open Source\\React-Todo-app\\src\\components\\logo.js",[],"F:\\Javascript\\Open Source\\React-Todo-app\\src\\config\\firebase.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":77,"column":9,"nodeType":"35","endLine":77,"endColumn":32},{"ruleId":"33","severity":1,"message":"34","line":88,"column":9,"nodeType":"35","endLine":88,"endColumn":32},{"ruleId":"33","severity":1,"message":"34","line":97,"column":9,"nodeType":"35","endLine":97,"endColumn":32},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]